name: Pull request
on:
  pull_request:
jobs:
  Modules:
    name: Modules
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Cache modules(yarn.lock)
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}
      - name: Package install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn
  Storybook:
    needs: Modules
    name: Build storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache modules(yarn.lock)
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}
      - name: Build storybook
        run: |
          yarn storybook:build
      - uses: actions/upload-artifact@v2
        with:
          name: Storybook
          path: storybook-static
  Gh-Pages:
    needs: Storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set env
        run: |
          echo export BRANCH=`echo ${GITHUB_HEAD_REF} | sed -e 's/\//-/g'`--`echo ${GITHUB_BASE_REF} | sed -e 's/\//-/g'` >> ~/.env
          echo export TARGET=`echo ${GITHUB_BASE_REF} | sed -e 's/\//-/g'` >> ~/.env
      - name: Cache modules(yarn.lock)
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}
      - name: Pull Target Shapshot
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          WORK_DIR: temp
          TARGET_PATH: captures
          SRC_PATH: screenshots
        run: |
          source ~/.env
          mkdir -p $WORK_DIR && cd $WORK_DIR
          git clone -b gh-pages --sparse --single-branch https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY . || exit 0
          git sparse-checkout add ${TARGET_PATH}/${TARGET}/${SRC_PATH}
          mv ${TARGET_PATH}/${TARGET}/${SRC_PATH} .. || true
      - uses: actions/download-artifact@v2
        with:
          name: Storybook
          path: storybook-static
      - name: Install Japanese font
        run: sudo apt-get install fonts-ipafont-gothic fonts-ipafont-mincho
      - name: Screenshot
        run: |
          source ~/.env
          yarn screenshot
          yarn reg-cli __screenshots__ screenshots __image_diff__ -J __image_diff__/index.json -I -M 0.1
          jq -c ".target = \"$TARGET\"" __image_diff__/index.json > index.json
          cp -f index.json __image_diff__
      - name: Git init
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          TARGET_PATH: captures
        run: |
          source ~/.env
          mkdir __gh-pages__
          cd __gh-pages__
          git init
          git config --global user.name $GITHUB_ACTOR
          git config --global user.email ${GITHUB_ACTOR}@git
          git config core.sparsecheckout true
          git remote add origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
          echo /${TARGET_PATH}/index.txt > .git/info/sparse-checkout
          echo /${TARGET_PATH}/${BRANCH} >> .git/info/sparse-checkout
          git pull origin gh-pages || true
          git checkout -b gh-pages
      - name: Create gh-pages
        env:
          TARGET_PATH: captures
          SRC_PATH1: storybook-static
          SRC_PATH2: screenshots
          SRC_PATH3: image_diff
        working-directory: ./__gh-pages__
        run: |
          source ~/.env
          rm -rf ${TARGET_PATH}/${BRANCH} || true
          mkdir -p ${TARGET_PATH}/${BRANCH}
          mv ../${SRC_PATH1} ${TARGET_PATH}/${BRANCH}/stories
          mv ../__${SRC_PATH2}__ ${TARGET_PATH}/${BRANCH}/${SRC_PATH2} || true
          mv ../__${SRC_PATH3}__ ${TARGET_PATH}/${BRANCH}/${SRC_PATH3} || true
      - name: Save gh-pages
        env:
          TARGET_PATH: captures
        working-directory: ./__gh-pages__
        run: |
          source ~/.env
          for i in `seq 5` ; do
            git ls-files | sed -r "s/^${TARGET_PATH}\/([^\/]+)\/.*/\1/;t;d" | echo -e "`cat`\n${BRANCH}" | sort -u > ${TARGET_PATH}/index.txt
            git add .
            git commit -m "Create gh-pages(${BRANCH})" || break
            (git push origin gh-pages && break) || (git fetch origin;git reset --hard origin/gh-pages)
            sleep 5
          done
      - name: Write comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        run: node .github/workflows/scripts/comment.js
